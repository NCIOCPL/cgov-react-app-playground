name: CI for Push Events
on: push
jobs:
  build:
    name: Build, Test and Upload Artifacts
    runs-on: ubuntu-latest
    steps:
      ## This clones and checks out.
      - name: Checkout branch
        uses: actions/checkout@v1
      ## Setup some environment vars
      - name: Set Variables
        id: set_vars
        run: |
          ## For artifact file name
          echo ::set-output name=build_name::$(sed -E 's/refs\/(heads|tags)\///; s/\//_/g;' <<< $GITHUB_REF)
          ## For buildinfo.txt
          echo ::set-output name=branch_name::$(sed -E 's/refs\/(heads|tags)\///;' <<< $GITHUB_REF)
          ## For buildinfo.txt
          echo ::set-output name=commit_hash::$(echo "${GITHUB_SHA}")
          ## For step checks and artifact deployment path.
          export REPO_NAME=${{ github.repository }}
          export REPO_RE='([^/]+)/(.*)'
          [[ "$REPO_NAME" =~ $REPO_RE ]]
          echo ::set-output name=repo_owner::${BASH_REMATCH[1]}
          echo ::set-output name=repo_name::${BASH_REMATCH[2]}
      ## This installs the correct node version
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      ## Restore cache
      - name: Restore npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: cache-${{ hashFiles('package-lock.json') }}
      ## Install using CI
      - name: Install Dependencies
        run: npm ci
        env:
          CI: true
      ## Build the app in prep for publishing
      - name: Build App
        run: npm run build
        env:
          CI: true
      ## Runs jest unit and cypress e2e testing and merges coverage reports
      - name: Run Tests 
        run: npm test
        env:
          CI: true
      ## Generate build-info.json to house information
      ## about this specific build. Used for product test
      ## deployment
      - name: Create Build Information
        env:
          BUILD_INFO: ${{ toJson(steps.set_vars.outputs) }}
        run: |
          echo $BUILD_INFO
          echo $BUILD_INFO > ./build/build-info.json
      ## Upload the test results artifact
      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: test-results
          path: coverage          
      ## Upload the test results artifact
      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build-artifact
          path: build
  deploy-test:
    name: Deploy built artifacts to test server
    ## Only do this if the repo is NCIOCPL
    if: startsWith(github.repository, 'NCIOCPL')    
    ## This job depends on build completing
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download built app
        uses: actions/download-artifact@master
        with:
          name: build-artifact
      - name: List File
        run: |
          ls -l build-artifact